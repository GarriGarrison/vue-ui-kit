{"version":3,"file":"guv-input.stories-EBi04mbT.js","sources":["../../src/components/input/guv-input.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, onMounted, type Ref } from 'vue';\nimport { onFocusin, onFocusout, onKeydown, onInput, onUpdateModelValue } from '@/common/mixin/emits';\nimport { useOnMount } from '@/common/hooks/use-mount';\nimport type { CommonProps } from '@/common/mixin/props';\nimport type { ValueInput } from '@/common/types/value';\n\nexport interface Props extends CommonProps {\n  modelValue: ValueInput;\n  type?: 'text' | 'number' | 'password' | 'email' | 'tel' | 'url' | 'search';\n  placeholder?: string;\n  mask?: RegExp;\n  invalid?: boolean;\n  integer?: boolean;\n  min?: number;\n  max?: number;\n  step?: number;\n  focus?: boolean;\n  disabled?: boolean;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  type: 'text',\n  placeholder: '',\n  mask: undefined,\n  invalid: false,\n  integer: false,\n  min: undefined,\n  max: undefined,\n  step: undefined,\n  disabled: false,\n});\n\nconst emit = defineEmits(['update:modelValue', 'keydown', 'input', 'focusin', 'focusout', 'mount', 'unmount']);\nuseOnMount(emit);\n\nconst inputRef: Ref<HTMLInputElement | null> = ref(null);\n\nconst forceFocus = (): void => {\n  if (inputRef.value) {\n    inputRef.value.focus();\n  }\n};\n\nconst handleInput = (element: EventTarget | null): void => {\n  if (element) {\n    onUpdateModelValue(emit, (element as HTMLInputElement).value);\n    onInput(emit, (element as HTMLInputElement).value);\n  }\n};\n\nconst handleKeydown = (event: KeyboardEvent): void => {\n  onKeydown(emit, event);\n\n  if (event.key === 'Backspace' || event.key == 'Delete') return;\n\n  if (props.mask && !props.mask.test(event.key)) {\n    event.preventDefault();\n  }\n\n  if (props.integer && !/^\\d+$/.test(event.key)) {\n    event.preventDefault();\n  }\n};\n\nexport interface InputExpose {\n  input: HTMLInputElement | null;\n  forceFocus: () => void;\n}\n\ndefineExpose({ input: inputRef, forceFocus });\n\nonMounted(() => {\n  if (props.focus) {\n    forceFocus();\n  }\n});\n</script>\n\n<template>\n  <input\n    ref=\"inputRef\"\n    :value=\"modelValue\"\n    :type=\"type\"\n    class=\"guv-input\"\n    :class=\"{ error: invalid && !modelValue, disabled: disabled }\"\n    :style=\"style\"\n    :placeholder=\"placeholder\"\n    :step=\"integer ? '1' : step\"\n    :min=\"min\"\n    :max=\"max\"\n    :disabled=\"disabled\"\n    @input=\"handleInput($event.target)\"\n    @focusin=\"onFocusin(emit)\"\n    @focusout=\"onFocusout(emit)\"\n    @keydown=\"handleKeydown($event)\"\n  />\n</template>\n\n<style scoped lang=\"scss\">\n@import '@/assets/variables';\n\n.guv-input {\n  box-sizing: border-box;\n  max-width: 100%;\n  padding: $p-input;\n  color: var(--text, $text);\n  font-size: 1rem;\n  background-color: var(--bg-input, $bg-input);\n  border: 1px solid transparent;\n  border-color: var(--border, $border);\n  border-radius: var(--border-radius, $border-radius);\n  transition: background 0.2s;\n  transition:\n    color 0.1s ease,\n    border-color 0.1s ease;\n  resize: none;\n\n  &:focus,\n  :focus-visible {\n    border-color: var(--border-focus, $border-focus);\n    outline: none;\n  }\n\n  &.disabled {\n    border-color: var(--border-disabled, $border-disabled);\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &.error {\n    border: 2px solid transparent;\n    border-color: var(--border-error, $border-error);\n  }\n}\n</style>\n"],"names":["props","__props","emit","__emit","useOnMount","inputRef","ref","forceFocus","handleInput","element","onUpdateModelValue","onInput","handleKeydown","event","onKeydown","__expose","onMounted"],"mappings":"ivBAqBA,MAAMA,EAAQC,EAYRC,EAAOC,EACbC,EAAWF,CAAI,EAET,MAAAG,EAAyCC,EAAI,IAAI,EAEjDC,EAAa,IAAY,CACzBF,EAAS,OACXA,EAAS,MAAM,OACjB,EAGIG,EAAeC,GAAsC,CACrDA,IACiBC,EAAAR,EAAOO,EAA6B,KAAK,EACpDE,EAAAT,EAAOO,EAA6B,KAAK,EACnD,EAGIG,EAAiBC,GAA+B,CACpDC,EAAUZ,EAAMW,CAAK,EAEjB,EAAAA,EAAM,MAAQ,aAAeA,EAAM,KAAO,YAE1Cb,EAAM,MAAQ,CAACA,EAAM,KAAK,KAAKa,EAAM,GAAG,GAC1CA,EAAM,eAAe,EAGnBb,EAAM,SAAW,CAAC,QAAQ,KAAKa,EAAM,GAAG,GAC1CA,EAAM,eAAe,EACvB,EAQF,OAAAE,EAAa,CAAE,MAAOV,EAAU,WAAAE,CAAY,CAAA,EAE5CS,EAAU,IAAM,CACVhB,EAAM,OACGO,GACb,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}